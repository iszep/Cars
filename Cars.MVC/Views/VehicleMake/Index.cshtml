@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@model PagingList<Cars.MVC.Models.IndexVehicleMake>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div>
    <a asp-action="Create">Create New</a>
    <form method="post">
        <div>
            Find by name:
            <input type="text" style="width:200px;" class="form-control" placeholder="Car name" name="search" maxlength="20" value="@Model.RouteValue["search"]" />
            <button type="submit">Search</button>
        </div>
    </form>

</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.SortableHeaderFor(model => model.Name, "Name")
            </th>

            <th>
                @Html.SortableHeaderFor(model => model.Abrv, "Abrv")
            </th>
            <th></th>
        </tr>


    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    <a asp-controller="VehicleModel" asp-action="Index" asp-route-makeId="@item.Id" asp-route-search="">Models</a>



                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Car makes navigation">
    <vc:pager paging-list="@Model" />
</nav>